//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SitcomEntities : DbContext
    {
        public SitcomEntities()
            : base("name=SitcomEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Caracteristica> Caracteristica { get; set; }
        public virtual DbSet<CaracteristicasHospedaje> CaracteristicasHospedaje { get; set; }
        public virtual DbSet<CasaDptoOCabana> CasaDptoOCabana { get; set; }
        public virtual DbSet<CategoriaCaracteristicas> CategoriaCaracteristicas { get; set; }
        public virtual DbSet<CategoriaHospedaje> CategoriaHospedaje { get; set; }
        public virtual DbSet<Comercio> Comercio { get; set; }
        public virtual DbSet<Complejo> Complejo { get; set; }
        public virtual DbSet<DetalleDisponibilidad> DetalleDisponibilidad { get; set; }
        public virtual DbSet<Disponibilidad> Disponibilidad { get; set; }
        public virtual DbSet<Domicilio> Domicilio { get; set; }
        public virtual DbSet<EstadoReserva> EstadoReserva { get; set; }
        public virtual DbSet<EstadoTramite> EstadoTramite { get; set; }
        public virtual DbSet<FotosNegocio> FotosNegocio { get; set; }
        public virtual DbSet<FotosUsuario> FotosUsuario { get; set; }
        public virtual DbSet<Habitacion> Habitacion { get; set; }
        public virtual DbSet<Hotel> Hotel { get; set; }
        public virtual DbSet<Localidad> Localidad { get; set; }
        public virtual DbSet<LugarHospedaje> LugarHospedaje { get; set; }
        public virtual DbSet<Negocio> Negocio { get; set; }
        public virtual DbSet<Paginas> Paginas { get; set; }
        public virtual DbSet<PaginasXPerfil> PaginasXPerfil { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Perfiles> Perfiles { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<Reserva> Reserva { get; set; }
        public virtual DbSet<Rubro> Rubro { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<Sucursal> Sucursal { get; set; }
        public virtual DbSet<Telefono> Telefono { get; set; }
        public virtual DbSet<TipoCaracteristica> TipoCaracteristica { get; set; }
        public virtual DbSet<TipoComplejo> TipoComplejo { get; set; }
        public virtual DbSet<TipoDeNegocio> TipoDeNegocio { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoHabitacion> TipoHabitacion { get; set; }
        public virtual DbSet<TipoLugarHospedaje> TipoLugarHospedaje { get; set; }
        public virtual DbSet<TipoTramite> TipoTramite { get; set; }
        public virtual DbSet<Tramite> Tramite { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Encuestas> Encuestas { get; set; }
        public virtual DbSet<EncuestasAsignadas> EncuestasAsignadas { get; set; }
        public virtual DbSet<Preguntas> Preguntas { get; set; }
        public virtual DbSet<Promociones> Promociones { get; set; }
        public virtual DbSet<PromocionesOtorgadas> PromocionesOtorgadas { get; set; }
        public virtual DbSet<TiposEncuesta> TiposEncuesta { get; set; }
        public virtual DbSet<ClasifPregunta> ClasifPregunta { get; set; }
        public virtual DbSet<RtasXEncuestasAsignadas> RtasXEncuestasAsignadas { get; set; }
        public virtual DbSet<TiposRespuesta> TiposRespuesta { get; set; }
    
        public virtual int cambiarCasaODptoNuevoComplejo(Nullable<int> idNegocioNuevo)
        {
            var idNegocioNuevoParameter = idNegocioNuevo.HasValue ?
                new ObjectParameter("idNegocioNuevo", idNegocioNuevo) :
                new ObjectParameter("idNegocioNuevo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cambiarCasaODptoNuevoComplejo", idNegocioNuevoParameter);
        }
    
        public virtual ObjectResult<cambiarHabitacionesNuevoHotel_Result> cambiarHabitacionesNuevoHotel(Nullable<int> idNegocioNuevo)
        {
            var idNegocioNuevoParameter = idNegocioNuevo.HasValue ?
                new ObjectParameter("idNegocioNuevo", idNegocioNuevo) :
                new ObjectParameter("idNegocioNuevo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cambiarHabitacionesNuevoHotel_Result>("cambiarHabitacionesNuevoHotel", idNegocioNuevoParameter);
        }
    
        public virtual int ConsultarHabitacionesDisponiblesPorFechaYNegocio(string fecha_desde, string fecha_hasta, Nullable<int> idNegocio)
        {
            var fecha_desdeParameter = fecha_desde != null ?
                new ObjectParameter("fecha_desde", fecha_desde) :
                new ObjectParameter("fecha_desde", typeof(string));
    
            var fecha_hastaParameter = fecha_hasta != null ?
                new ObjectParameter("fecha_hasta", fecha_hasta) :
                new ObjectParameter("fecha_hasta", typeof(string));
    
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarHabitacionesDisponiblesPorFechaYNegocio", fecha_desdeParameter, fecha_hastaParameter, idNegocioParameter);
        }
    
        public virtual int ConsultarHabitacionesDisponiblesPorFechaYNegocio_Planning(string fecha_desde, string fecha_hasta, Nullable<int> idNegocio)
        {
            var fecha_desdeParameter = fecha_desde != null ?
                new ObjectParameter("fecha_desde", fecha_desde) :
                new ObjectParameter("fecha_desde", typeof(string));
    
            var fecha_hastaParameter = fecha_hasta != null ?
                new ObjectParameter("fecha_hasta", fecha_hasta) :
                new ObjectParameter("fecha_hasta", typeof(string));
    
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarHabitacionesDisponiblesPorFechaYNegocio_Planning", fecha_desdeParameter, fecha_hastaParameter, idNegocioParameter);
        }
    
        public virtual int ConsultarLugaresHospedaje(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> cantPersonas, Nullable<int> cantHabitaciones, string tipoHospedaje)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            var cantPersonasParameter = cantPersonas.HasValue ?
                new ObjectParameter("cantPersonas", cantPersonas) :
                new ObjectParameter("cantPersonas", typeof(int));
    
            var cantHabitacionesParameter = cantHabitaciones.HasValue ?
                new ObjectParameter("cantHabitaciones", cantHabitaciones) :
                new ObjectParameter("cantHabitaciones", typeof(int));
    
            var tipoHospedajeParameter = tipoHospedaje != null ?
                new ObjectParameter("tipoHospedaje", tipoHospedaje) :
                new ObjectParameter("tipoHospedaje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ConsultarLugaresHospedaje", fechaDesdeParameter, fechaHastaParameter, cantPersonasParameter, cantHabitacionesParameter, tipoHospedajeParameter);
        }
    
        public virtual int DetalleDisponibilidad_i(Nullable<int> idDisponibilidad, Nullable<int> idPersona)
        {
            var idDisponibilidadParameter = idDisponibilidad.HasValue ?
                new ObjectParameter("idDisponibilidad", idDisponibilidad) :
                new ObjectParameter("idDisponibilidad", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DetalleDisponibilidad_i", idDisponibilidadParameter, idPersonaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Disponibilidad_i(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idHabitacion, Nullable<int> idCasaODpto, Nullable<int> idReserva)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("fechaDesde", fechaDesde) :
                new ObjectParameter("fechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("fechaHasta", fechaHasta) :
                new ObjectParameter("fechaHasta", typeof(System.DateTime));
    
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var idCasaODptoParameter = idCasaODpto.HasValue ?
                new ObjectParameter("idCasaODpto", idCasaODpto) :
                new ObjectParameter("idCasaODpto", typeof(int));
    
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("idReserva", idReserva) :
                new ObjectParameter("idReserva", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Disponibilidad_i", fechaDesdeParameter, fechaHastaParameter, idHabitacionParameter, idCasaODptoParameter, idReservaParameter);
        }
    
        public virtual int getDisponibilidadCasaDpto(Nullable<int> idCasa, Nullable<int> anio, Nullable<int> mes)
        {
            var idCasaParameter = idCasa.HasValue ?
                new ObjectParameter("idCasa", idCasa) :
                new ObjectParameter("idCasa", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getDisponibilidadCasaDpto", idCasaParameter, anioParameter, mesParameter);
        }
    
        public virtual int getDisponibilidadComplejo(Nullable<int> idComplejo, Nullable<int> cantidadCasasSolicitadas, Nullable<int> cantidadPersonasSolicitadas, Nullable<int> anio, Nullable<int> mes)
        {
            var idComplejoParameter = idComplejo.HasValue ?
                new ObjectParameter("idComplejo", idComplejo) :
                new ObjectParameter("idComplejo", typeof(int));
    
            var cantidadCasasSolicitadasParameter = cantidadCasasSolicitadas.HasValue ?
                new ObjectParameter("cantidadCasasSolicitadas", cantidadCasasSolicitadas) :
                new ObjectParameter("cantidadCasasSolicitadas", typeof(int));
    
            var cantidadPersonasSolicitadasParameter = cantidadPersonasSolicitadas.HasValue ?
                new ObjectParameter("cantidadPersonasSolicitadas", cantidadPersonasSolicitadas) :
                new ObjectParameter("cantidadPersonasSolicitadas", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getDisponibilidadComplejo", idComplejoParameter, cantidadCasasSolicitadasParameter, cantidadPersonasSolicitadasParameter, anioParameter, mesParameter);
        }
    
        public virtual int getDisponibilidadHabitacion(Nullable<int> idHabitacion, Nullable<int> anio, Nullable<int> mes)
        {
            var idHabitacionParameter = idHabitacion.HasValue ?
                new ObjectParameter("idHabitacion", idHabitacion) :
                new ObjectParameter("idHabitacion", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getDisponibilidadHabitacion", idHabitacionParameter, anioParameter, mesParameter);
        }
    
        public virtual int getDisponibilidadHotel(Nullable<int> idHotel, Nullable<int> cantidadHabitacionesSolicitadas, Nullable<int> cantidadPersonasSolicitadas, Nullable<int> anio, Nullable<int> mes)
        {
            var idHotelParameter = idHotel.HasValue ?
                new ObjectParameter("idHotel", idHotel) :
                new ObjectParameter("idHotel", typeof(int));
    
            var cantidadHabitacionesSolicitadasParameter = cantidadHabitacionesSolicitadas.HasValue ?
                new ObjectParameter("cantidadHabitacionesSolicitadas", cantidadHabitacionesSolicitadas) :
                new ObjectParameter("cantidadHabitacionesSolicitadas", typeof(int));
    
            var cantidadPersonasSolicitadasParameter = cantidadPersonasSolicitadas.HasValue ?
                new ObjectParameter("cantidadPersonasSolicitadas", cantidadPersonasSolicitadas) :
                new ObjectParameter("cantidadPersonasSolicitadas", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            var mesParameter = mes.HasValue ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getDisponibilidadHotel", idHotelParameter, cantidadHabitacionesSolicitadasParameter, cantidadPersonasSolicitadasParameter, anioParameter, mesParameter);
        }
    
        public virtual int Persona_i(string nombre, string apellido, string email, Nullable<int> documento, Nullable<int> idSexo, Nullable<int> idTelefono, Nullable<int> idTipoDocumento, Nullable<int> idDomicilio, Nullable<int> idNegocio)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var documentoParameter = documento.HasValue ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(int));
    
            var idSexoParameter = idSexo.HasValue ?
                new ObjectParameter("idSexo", idSexo) :
                new ObjectParameter("idSexo", typeof(int));
    
            var idTelefonoParameter = idTelefono.HasValue ?
                new ObjectParameter("idTelefono", idTelefono) :
                new ObjectParameter("idTelefono", typeof(int));
    
            var idTipoDocumentoParameter = idTipoDocumento.HasValue ?
                new ObjectParameter("idTipoDocumento", idTipoDocumento) :
                new ObjectParameter("idTipoDocumento", typeof(int));
    
            var idDomicilioParameter = idDomicilio.HasValue ?
                new ObjectParameter("idDomicilio", idDomicilio) :
                new ObjectParameter("idDomicilio", typeof(int));
    
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Persona_i", nombreParameter, apellidoParameter, emailParameter, documentoParameter, idSexoParameter, idTelefonoParameter, idTipoDocumentoParameter, idDomicilioParameter, idNegocioParameter);
        }
    
        public virtual ObjectResult<Persona_s_By_IdNegocio_Result> Persona_s_By_IdNegocio(Nullable<int> idNegocio)
        {
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Persona_s_By_IdNegocio_Result>("Persona_s_By_IdNegocio", idNegocioParameter);
        }
    
        public virtual int Reserva_CheckIn(Nullable<int> idReserva)
        {
            var idReservaParameter = idReserva.HasValue ?
                new ObjectParameter("idReserva", idReserva) :
                new ObjectParameter("idReserva", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reserva_CheckIn", idReservaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Reserva_i(Nullable<int> idPersonaSolicitante, Nullable<int> idNegocio, Nullable<int> idSolicitud)
        {
            var idPersonaSolicitanteParameter = idPersonaSolicitante.HasValue ?
                new ObjectParameter("idPersonaSolicitante", idPersonaSolicitante) :
                new ObjectParameter("idPersonaSolicitante", typeof(int));
    
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("idSolicitud", idSolicitud) :
                new ObjectParameter("idSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Reserva_i", idPersonaSolicitanteParameter, idNegocioParameter, idSolicitudParameter);
        }
    
        public virtual int altaPromocion(Nullable<int> idNegocio, Nullable<System.DateTime> fechaVencimiento, string titulo, string descripcion, Nullable<int> diasBeneficio, Nullable<int> ofertaMaxima)
        {
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("fechaVencimiento", fechaVencimiento) :
                new ObjectParameter("fechaVencimiento", typeof(System.DateTime));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var diasBeneficioParameter = diasBeneficio.HasValue ?
                new ObjectParameter("diasBeneficio", diasBeneficio) :
                new ObjectParameter("diasBeneficio", typeof(int));
    
            var ofertaMaximaParameter = ofertaMaxima.HasValue ?
                new ObjectParameter("ofertaMaxima", ofertaMaxima) :
                new ObjectParameter("ofertaMaxima", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("altaPromocion", idNegocioParameter, fechaVencimientoParameter, tituloParameter, descripcionParameter, diasBeneficioParameter, ofertaMaximaParameter);
        }
    
        public virtual int cancelPromociones(Nullable<int> idPromocion)
        {
            var idPromocionParameter = idPromocion.HasValue ?
                new ObjectParameter("idPromocion", idPromocion) :
                new ObjectParameter("idPromocion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cancelPromociones", idPromocionParameter);
        }
    
        public virtual ObjectResult<getPromociones_Result> getPromociones(Nullable<int> idNegocio, Nullable<int> esTurista)
        {
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            var esTuristaParameter = esTurista.HasValue ?
                new ObjectParameter("esTurista", esTurista) :
                new ObjectParameter("esTurista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPromociones_Result>("getPromociones", idNegocioParameter, esTuristaParameter);
        }
    
        public virtual ObjectResult<getPromocionesOtorgadas_Result> getPromocionesOtorgadas(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPromocionesOtorgadas_Result>("getPromocionesOtorgadas", idUsuarioParameter);
        }
    
        public virtual ObjectResult<getPromocionOtorgada_Result> getPromocionOtorgada(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPromocionOtorgada_Result>("getPromocionOtorgada", codigoParameter);
        }
    
        public virtual int obtenerCodigoProm(ObjectParameter codigo)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("obtenerCodigoProm", codigo);
        }
    
        public virtual int otorgarPromocion(Nullable<int> idPromocion, Nullable<int> idUsuario)
        {
            var idPromocionParameter = idPromocion.HasValue ?
                new ObjectParameter("idPromocion", idPromocion) :
                new ObjectParameter("idPromocion", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("otorgarPromocion", idPromocionParameter, idUsuarioParameter);
        }
    
        public virtual int regUsoPromocion(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("regUsoPromocion", codigoParameter);
        }
    
        public virtual int updatePromociones(Nullable<int> idPromocion, Nullable<System.DateTime> fechaVencimiento, string titulo, string descripcion, Nullable<int> diasBeneficio)
        {
            var idPromocionParameter = idPromocion.HasValue ?
                new ObjectParameter("idPromocion", idPromocion) :
                new ObjectParameter("idPromocion", typeof(int));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("fechaVencimiento", fechaVencimiento) :
                new ObjectParameter("fechaVencimiento", typeof(System.DateTime));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var diasBeneficioParameter = diasBeneficio.HasValue ?
                new ObjectParameter("diasBeneficio", diasBeneficio) :
                new ObjectParameter("diasBeneficio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatePromociones", idPromocionParameter, fechaVencimientoParameter, tituloParameter, descripcionParameter, diasBeneficioParameter);
        }
    
        public virtual int asignarEncuesta(Nullable<int> idTipoEncuesta, Nullable<int> idUsuario, Nullable<int> idNegocio, string checkOutDate)
        {
            var idTipoEncuestaParameter = idTipoEncuesta.HasValue ?
                new ObjectParameter("idTipoEncuesta", idTipoEncuesta) :
                new ObjectParameter("idTipoEncuesta", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            var checkOutDateParameter = checkOutDate != null ?
                new ObjectParameter("checkOutDate", checkOutDate) :
                new ObjectParameter("checkOutDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("asignarEncuesta", idTipoEncuestaParameter, idUsuarioParameter, idNegocioParameter, checkOutDateParameter);
        }
    
        public virtual ObjectResult<GetEncuestasAsignadas_Result> GetEncuestasAsignadas(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEncuestasAsignadas_Result>("GetEncuestasAsignadas", idUsuarioParameter);
        }
    
        public virtual ObjectResult<GetPreguntasEncuesta_Result> GetPreguntasEncuesta(Nullable<int> idEncuestaAsignada)
        {
            var idEncuestaAsignadaParameter = idEncuestaAsignada.HasValue ?
                new ObjectParameter("idEncuestaAsignada", idEncuestaAsignada) :
                new ObjectParameter("idEncuestaAsignada", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPreguntasEncuesta_Result>("GetPreguntasEncuesta", idEncuestaAsignadaParameter);
        }
    
        public virtual int RegRtaXPregunta(Nullable<int> idPregunta, Nullable<int> idEncuestaAsignada, Nullable<int> respuesta)
        {
            var idPreguntaParameter = idPregunta.HasValue ?
                new ObjectParameter("idPregunta", idPregunta) :
                new ObjectParameter("idPregunta", typeof(int));
    
            var idEncuestaAsignadaParameter = idEncuestaAsignada.HasValue ?
                new ObjectParameter("idEncuestaAsignada", idEncuestaAsignada) :
                new ObjectParameter("idEncuestaAsignada", typeof(int));
    
            var respuestaParameter = respuesta.HasValue ?
                new ObjectParameter("respuesta", respuesta) :
                new ObjectParameter("respuesta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegRtaXPregunta", idPreguntaParameter, idEncuestaAsignadaParameter, respuestaParameter);
        }
    
        public virtual ObjectResult<getPromociones2_Result> getPromociones2(Nullable<int> idNegocio)
        {
            var idNegocioParameter = idNegocio.HasValue ?
                new ObjectParameter("idNegocio", idNegocio) :
                new ObjectParameter("idNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPromociones2_Result>("getPromociones2", idNegocioParameter);
        }
    
        public virtual ObjectResult<getUltimaPromocionOtorgada_Result> getUltimaPromocionOtorgada(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUltimaPromocionOtorgada_Result>("getUltimaPromocionOtorgada", idUsuarioParameter);
        }
    }
}
